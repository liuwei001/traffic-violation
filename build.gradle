import org.gradle.plugins.ide.eclipse.model.Facet
apply plugin: 'war'  					 //指定web项目，项目编译时生成项目的war包
apply plugin: 'eclipse-wtp'  			 //插件将构建web项目的开发环境，生成所需要的.project,.classpath等文件
apply plugin: 'maven'  				//使用maven做为jar包的信赖管理，通过mave仓库下载项目所需的信赖包
apply plugin: "maven-publish"    //上传jar包到mave仓库
apply plugin: 'jetty'						//加入jetty的支持，代码修改后直接执行命令gradle jettyRun即可运行web项目
//webAppDirName = 'src/main/webapp'  

sourceCompatibility = 1.6 // 设置 JDK 版本
targetCompatibility = 1.6  //设置目标发行版本

group = "com.weizhang" //组id
//version = "1.0.1-SNAPSHOT" //版本信息
version = "1.0.1-RELEASE" //版本信息

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'//设置编码

//defaultTasks 'clean', 'jar' 

//jar包下载  设置 maven 库地址
repositories {
     mavenLocal() //从本地仓库下载jar包
     mavenCentral()   //从中央仓库下载
     maven { url "http://maven.oschina.net/content/groups/public" }
     maven { url "http://download.java.net/maven/2/" }
     maven { url "http://repo.spring.io/release/" }
     maven { url "http://repo.maven.apache.org/maven2" }
     maven { url "http://repo1.maven.org/maven2/" }
     maven { url "https://maven.alfresco.com/nexus/content/groups/public" }
     maven { url "https://app.camunda.com/nexus/content/groups/public" }
     maven { url "http://git.oschina.net/thinkgem/repos/raw/master" }
     maven { url "https://raw.github.com/thinkgem/repository/master" }
}

// 设置依赖
dependencies {
		compile fileTree(dir: 'libs', include: '*.jar')  
		
		//fasterxml jackson
    compile( 	
		'org.codehaus.jackson:jackson-core-asl:1.9.12',
		'org.codehaus.jackson:jackson-mapper-asl:1.9.12'
    )
    
     //httpclient
    compile(
    	'org.apache.httpcomponents:httpclient:4.3.1',
    	'org.apache.httpcomponents:httpmime:4.3.1'
    )
        compile (  
            'org.slf4j:slf4j-log4j12:1.7.2',
            'org.slf4j:slf4j-jdk14:1.7.5',  
            'mysql:mysql-connector-java:5.1.24',
            'javax.activation:activation:1.1.1',
            'ant:ant:1.7.0',
            'aopalliance:aopalliance:1.0',
            'asm:asm:3.1',
            'commons-beanutils:commons-beanutils:1.8.0',
            'commons-cli:commons-cli:1.2',
            'commons-codec:commons-codec:1.4',
            'commons-collections:commons-collections:3.2.1',
            'commons-configuration:commons-configuration:1.6',
            'commons-digester:commons-digester:1.8',
            'commons-io:commons-io:1.4',
            'org.apache.commons:commons-lang3:3.3.2',
            'commons-logging:commons-logging:1.1.1',
            'commons-net:commons-net:1.4.1',
            'commons-pool:commons-pool:1.6',
            'com.alibaba:druid:1.0.7',
            'com.alibaba:fastjson:1.1.41',
            'log4j:log4j:1.2.16',
            'org.apache.ibatis:ibatis-sqlmap:2.3.4.726',
            'ognl:ognl:3.0.1',
            'org.apache.poi:poi:3.10.1',
             'org.springframework:spring-aop:3.0.6.RELEASE',
            'org.springframework:spring-aspects:3.0.6.RELEASE',
            'org.springframework:spring-beans:3.0.6.RELEASE',
            'org.springframework:spring-context:3.0.6.RELEASE',
            'org.springframework:spring-context-support:3.0.6.RELEASE',
            'org.springframework:spring-expression:3.0.6.RELEASE',
            'org.springframework:spring-instrument:3.0.6.RELEASE',
            'org.springframework:spring-jdbc:3.0.6.RELEASE',
            'org.springframework:spring-orm:3.0.6.RELEASE',
            'org.springframework:spring-oxm:3.0.6.RELEASE',
            'org.springframework:spring-tx:3.0.6.RELEASE',
            'org.springframework:spring-web:3.0.6.RELEASE',
            'org.springframework:spring-webmvc:3.0.6.RELEASE',
			'taglibs:standard:1.1.1',
			'org.apache.commons:commons-math:2.1',
			'javax.servlet:servlet-api:2.5', // 编译期
         	 'javax.servlet:jsp-api:2.0',
			'javax.servlet:jstl:1.2' //加入包中，否则发布到tomcat报错，jetty与jboss正常
        )  
         providedCompile (
         	     //  'javax.servlet:servlet-api:2.5', // 编译期
         	     //  'javax.servlet:jsp-api:2.0'
         )
    	// providedRuntime 'javax.servlet:jstl:1.2'    // 运行时
    	testCompile(
    		'junit:junit:4.11'
    	)
    }  
    

// 设置 Project Facets
eclipse {
    wtp {
        facet {
            facet name: 'jst.web', type: Facet.FacetType.fixed
            facet name: 'wst.jsdt.web', type: Facet.FacetType.fixed
            facet name: 'jst.java', type: Facet.FacetType.fixed
            facet name: 'jst.web', version: '2.4'
            facet name: 'jst.java', version: '1.6'
            facet name: 'wst.jsdt.web', version: '1.0'
        }
    }
}

/*将src/main/java编译的class打包成${project.name}-${version}.jar放入到build/libs目录下,配置文件没必要打包*/  
task jarWithoutResources(type: Jar) {  
    baseName project.name  
    from("$buildDir/classes/main")  
} 
/*1.将$projectDir/resources下的配置文件(生产上的配置文件)拷贝到WEB-INF/classes目录,不打包是为了方便修改配置*/  
/*2.将sourceSet.main下面编译的文件和资源文件剔除:*/  
//classpath=classpath - files("$buildDir/classes/main")  
//classpath=classpath - files("$buildDir/resources/main")  
/*3.将前一步打包的jar文件放入WEB-INF/lib目录下*/  
//打uat环境war包
task uatWar(type: War){  
    from("$projectDir/src/main/resources") {  
       // include "*.properties"  
        into("WEB-INF/classes")  
    }  
    from("$projectDir/src/main/uatRes") {  
        include "*.properties"  
        into("WEB-INF/classes")  
    }  
}

//打生产环境war包
task prodWar(type: War){  
    from("$projectDir/src/main/resources") {  
       // include "*.properties"  
        into("WEB-INF/classes")  
    }  
    from("$projectDir/src/main/prodRes") {  
        include "*.properties"  
        into("WEB-INF/classes")  
    }  
}